# OpenManus-Go Configuration Example
# Copy this file to config.toml and customize as needed
#
# 🔧 Quick Setup:
#   1. Copy: cp configs/config.example.toml configs/config.toml
#   2. Edit: Set your LLM API key and other required settings
#   3. Run: ./bin/openmanus run --config configs/config.toml
#
# 🐳 Docker Environment:
#   - Use environment variables for sensitive data
#   - Set host = "0.0.0.0" for container deployment
#   - Use service names for Redis/MySQL addresses (e.g., "redis:6379")

[llm]
model = "deepseek-chat"                    # 或 "gpt-3.5-turbo", "gpt-4", "claude-3-sonnet"
base_url = "https://api.deepseek.com/v1"   # 或使用环境变量: "${OPENMANUS_LLM_BASE_URL}"
api_key = "your-api-key-here"              # 🔑 REQUIRED: 必须设置 API key
temperature = 0.1                          # 生成温度 (0.0-1.0)
max_tokens = 4000                          # 最大令牌数
timeout = 60                               # 请求超时时间 (秒)

[agent]
max_steps = 15                             # 最大执行步数
max_tokens = 10000                         # 最大令牌预算
max_duration = "10m"                       # 最大执行时间
reflection_steps = 3                       # 反思步数间隔
max_retries = 3                            # 最大重试次数
retry_backoff = "2s"                       # 重试间隔

# 运行流程配置
[runflow]
use_data_analysis_agent = false            # 是否使用数据分析智能体
enable_multi_agent = false                 # 是否启用多智能体协作

[server]
host = "localhost"                         # Docker: "0.0.0.0"
port = 8080

[storage]
type = "file"                              # Options: file, memory, redis, s3
base_path = "./data/traces"                # Docker: "/app/data/traces"

# Redis 存储配置 (可选)
[storage.redis]
addr = "localhost:6379"                    # Docker: "redis:6379"
password = ""                              # 生产环境建议设置密码
db = 0

# S3 存储配置 (可选)
[storage.s3]
region = "us-east-1"
bucket = "openmanus-traces"
access_key = ""                            # 使用环境变量: OPENMANUS_S3_ACCESS_KEY
secret_key = ""                            # 使用环境变量: OPENMANUS_S3_SECRET_KEY

[logging]
level = "info"                             # debug | info | warn | error
output = "console"                         # console | file | both
file_path = "./log/openmanus.log"

# 工具配置
[tools.http]
timeout = 45                               # HTTP 请求超时时间 (秒)
allowed_domains = []                       # 空数组 = 允许所有域名
blocked_domains = ["localhost", "127.0.0.1", "169.254.169.254"]

[tools.filesystem]
allowed_paths = ["./workspace", "./data", "./examples"]  # Docker: ["/app/workspace", "/app/data"]
blocked_paths = ["/etc", "/sys", "/proc", "/root", "/var"]

[tools.browser]
headless = true                            # 无头浏览器模式
timeout = 60                               # 浏览器操作超时时间 (秒)
user_agent = "OpenManus-Go/1.0"

# 数据库配置 (可选)
[tools.database.mysql]
dsn = ""                                   # MySQL 连接字符串，空字符串禁用

[tools.database.redis]
addr = "localhost:6379"                    # Redis 地址
password = ""                              # Redis 密码
db = 1                                     # Redis 数据库编号

[tools.database.elasticsearch]
addresses = []                             # ES 地址列表，空数组禁用
username = ""                              # ES 用户名
password = ""                              # ES 密码

# MCP 服务器配置
[mcp.servers]

# Higress 股票助手 MCP 服务
[mcp.servers.mcp-stock-helper]
url = "https://mcp.higress.ai/mcp-stock-helper/your-session-id"

# Higress 日历节假日助手 MCP 服务
[mcp.servers.mcp-calendar-holiday-helper]
url = "https://mcp.higress.ai/mcp-calendar-holiday-helper/your-session-id"

# MCP 服务器自定义请求头示例 (如需要)
# [mcp.servers.mcp-stock-helper.headers]
# Authorization = "Bearer <TOKEN>"
# X-API-Key = "<KEY>"